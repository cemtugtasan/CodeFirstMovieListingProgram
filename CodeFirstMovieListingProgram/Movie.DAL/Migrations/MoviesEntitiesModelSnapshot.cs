// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movie.DAL.Entity;

#nullable disable

namespace Movies.DAL.Migrations
{
    [DbContext(typeof(MoviesEntities))]
    partial class MoviesEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Movie.Model.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Name = "Action"
                        },
                        new
                        {
                            CategoryID = 2,
                            Name = "Adventure"
                        },
                        new
                        {
                            CategoryID = 3,
                            Name = "Fantastic"
                        },
                        new
                        {
                            CategoryID = 4,
                            Name = "Science fiction"
                        },
                        new
                        {
                            CategoryID = 5,
                            Name = "Crime"
                        },
                        new
                        {
                            CategoryID = 6,
                            Name = "Drama"
                        },
                        new
                        {
                            CategoryID = 7,
                            Name = "Comedy"
                        },
                        new
                        {
                            CategoryID = 8,
                            Name = "Romantic"
                        });
                });

            modelBuilder.Entity("Movie.Model.Models.Film", b =>
                {
                    b.Property<int>("FilmID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FilmID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("FilmReleaseDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PopularityRate")
                        .HasColumnType("int");

                    b.HasKey("FilmID");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            FilmID = 1,
                            CategoryID = 0,
                            FilmReleaseDate = "2004",
                            Name = "Pirates of the Caribbean: The Curse of the Black Pearl",
                            PopularityRate = 8
                        },
                        new
                        {
                            FilmID = 2,
                            CategoryID = 0,
                            FilmReleaseDate = "1999",
                            Name = "The Matrix",
                            PopularityRate = 9
                        },
                        new
                        {
                            FilmID = 3,
                            CategoryID = 0,
                            FilmReleaseDate = "1972",
                            Name = "The Godfather",
                            PopularityRate = 10
                        },
                        new
                        {
                            FilmID = 4,
                            CategoryID = 0,
                            FilmReleaseDate = "2008",
                            Name = "YesMan",
                            PopularityRate = 6
                        },
                        new
                        {
                            FilmID = 5,
                            CategoryID = 0,
                            FilmReleaseDate = "2016",
                            Name = "Deadpool",
                            PopularityRate = 7
                        },
                        new
                        {
                            FilmID = 6,
                            CategoryID = 0,
                            FilmReleaseDate = "2005",
                            Name = "Pride&Prejudice",
                            PopularityRate = 5
                        });
                });

            modelBuilder.Entity("Movies.Model.Models.FilmCategory", b =>
                {
                    b.Property<int>("FilmID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.HasKey("FilmID", "CategoryID");

                    b.HasIndex("CategoryID");

                    b.ToTable("FilmCategories");

                    b.HasData(
                        new
                        {
                            FilmID = 1,
                            CategoryID = 1
                        },
                        new
                        {
                            FilmID = 1,
                            CategoryID = 2
                        },
                        new
                        {
                            FilmID = 1,
                            CategoryID = 3
                        },
                        new
                        {
                            FilmID = 1,
                            CategoryID = 6
                        },
                        new
                        {
                            FilmID = 1,
                            CategoryID = 7
                        },
                        new
                        {
                            FilmID = 2,
                            CategoryID = 1
                        },
                        new
                        {
                            FilmID = 2,
                            CategoryID = 3
                        },
                        new
                        {
                            FilmID = 2,
                            CategoryID = 4
                        },
                        new
                        {
                            FilmID = 2,
                            CategoryID = 6
                        },
                        new
                        {
                            FilmID = 3,
                            CategoryID = 1
                        },
                        new
                        {
                            FilmID = 3,
                            CategoryID = 2
                        },
                        new
                        {
                            FilmID = 3,
                            CategoryID = 5
                        },
                        new
                        {
                            FilmID = 3,
                            CategoryID = 6
                        },
                        new
                        {
                            FilmID = 4,
                            CategoryID = 6
                        },
                        new
                        {
                            FilmID = 4,
                            CategoryID = 7
                        },
                        new
                        {
                            FilmID = 4,
                            CategoryID = 8
                        },
                        new
                        {
                            FilmID = 5,
                            CategoryID = 1
                        },
                        new
                        {
                            FilmID = 5,
                            CategoryID = 2
                        },
                        new
                        {
                            FilmID = 5,
                            CategoryID = 3
                        },
                        new
                        {
                            FilmID = 5,
                            CategoryID = 7
                        },
                        new
                        {
                            FilmID = 6,
                            CategoryID = 5
                        },
                        new
                        {
                            FilmID = 6,
                            CategoryID = 6
                        },
                        new
                        {
                            FilmID = 6,
                            CategoryID = 8
                        });
                });

            modelBuilder.Entity("Movies.Model.Models.FilmCategory", b =>
                {
                    b.HasOne("Movie.Model.Models.Category", "Category")
                        .WithMany("FilmsCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movie.Model.Models.Film", "Film")
                        .WithMany("FilmsCategories")
                        .HasForeignKey("FilmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("Movie.Model.Models.Category", b =>
                {
                    b.Navigation("FilmsCategories");
                });

            modelBuilder.Entity("Movie.Model.Models.Film", b =>
                {
                    b.Navigation("FilmsCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
